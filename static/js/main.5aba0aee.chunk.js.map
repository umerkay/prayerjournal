{"version":3,"sources":["store.js","Functions.js","base.js","Actions/UserActions.js","Components/Loading.js","Components/LocationSelect.js","Components/optionSwitch.js","Components/SignModule.js","Components/Registeration.js","Components/SettingsModal.js","Components/AboutModal.js","Components/HeaderMobile.js","Components/QuranCard.js","Components/GeneralCard.js","Data.js","Components/PrayerModal.js","Components/StatiModal.js","Components/WeeklyCard.js","Components/PrayersContainer.js","Components/Home.js","App.js","Actions/AuthActions.js","serviceWorker.js","index.js","Components/loading.gif"],"names":["initialState","hasInitialised","store","get","preferences","timings","isAuthenticated","StateStore","createContext","Provider","StateProvider","children","useReducer","state","action","type","payload","stati","user","dispatch","value","ParseSingleStringifiedStati","temp","isVerbose","parts","split","Fajr","Zuhr","Asr","Maghrib","Isha","timestamp","Date","parseInt","toISOString","timeGreater","a","b","fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","enablePersistence","defaultPreferences","calcMethod","theme","format","signed","creds","location","additionalUserInfo","isNewUser","map","item","length","forEach","status","unixTimestamp","date","getTime","msRightNow","i","push","batch","userRef","collection","doc","uid","set","toDateString","merge","commit","syncStatiDate","newStati","lastTimestamp","daysPassed","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","editPrayerStatus","key","update","setTimings","Dhuhr","Loading","props","msg","className","bright","width","src","LoadingGIF","alt","style","this","mini","LocationSelect","onFinal","_countryID","_stateID","_cityID","countries","csc","getAllCountries","useState","getStatesOfCountry","states","setStates","getCitiesOfState","cities","setCities","formState","setFormState","formUpdated","target","name","country","options","selectedIndex","innerHTML","getCountryById","newState","getStateById","city","id","onChange","option","marginTop","OptionSwitch","handleChange","e","setState","checked","Component","SignModule","isFor","disabled","htmlFor","replace","toUpperCase","required","Registration","useContext","AuthType","setAuthType","message","error","setError","isLoading","setLoading","onSigned","onError","err","useEffect","provider","auth","GoogleAuthProvider","signInWithPopup","then","catch","signin","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","onSubmit","preventDefault","SettingsModal","modalIsOpen","toggle","dataChanged","setDataChanged","isOpen","shouldCloseOnOverlayClick","onRequestClose","overlayClassName","displayName","marginBottom","onClick","window","confirm","signOut","timeFormat","position","bottom","icon","faTimes","editPreferences","faSave","Modal","setAppElement","AboutModal","fontWeight","href","rel","HeaderMobile","shouldUpdateVerse","verse","toLocaleDateString","locale","QuranCard","React","setVerse","fetchData","fetch","res","ok","Error","json","result","translate","newVerse","reference","sura_detail","tname","sura","aya","text","arabic","surahName","faExclamationTriangle","animationDuration","dark","textAlign","cursor","marginRight","faSync","faAngleDoubleRight","GeneralCard","names","PrayerModal","save","prayerState","formData","setFormData","msgs","indexOf","index","slice","char","color","StatiModal","range","setRange","isFetching","setIsFetching","queryResults","setQueryResults","rangeUpdated","param","where","resp","data","docs","console","log","isDateToday","WeeklyCard","statusModalState","setStatusModalState","statiModalState","setStatiModalState","setPrayerState","lastStatus","shouldUpdateStati","dayNames","statiToShow","days","getDay","dayIndex","editStatus","faCalendarWeek","marginLeft","faHistory","gridTemplateColumns","dayStatus","day","status2","PrayersContainer","currTime","modalState","setModalState","loading","newTimings","Prayer","time","toString","match","join","timePassed","messages","o","m","n","d","ex","Home","setAboutModal","setSettingsModal","faMapMarkerAlt","display","faCog","faInfo","App","settingsModalState","aboutModalState","toUnsubscribe","callback","onAuthStateChanged","orderBy","limit","onSnapshot","snapshot","reverse","setAuthListener","unsubscribe","getHours","getMinutes","Sunrise","Sunset","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.5aba0aee.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport store from 'store';\r\n\r\nconst initialState = {\r\n  hasInitialised: store.get(\"hasInitialised\"),\r\n  preferences: store.get(\"preferences\"),\r\n  // stati: store.get(\"stati\"),\r\n  timings: store.get(\"timings\"),\r\n  isAuthenticated: store.get(\"isAuthenticated\")\r\n};\r\nconst StateStore = createContext(initialState);\r\nconst { Provider } = StateStore;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"INITIALISE_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          hasInitialised: true,\r\n          preferences: action.payload.preferences,\r\n          stati: action.payload.stati\r\n        }\r\n      case \"INITIALISE_UNDO\":\r\n        return {\r\n          hasInitialised: false\r\n        }\r\n      case \"AUTH_STATE_CHANGED\":\r\n        return {\r\n          ...state,\r\n          user: action.payload.user,\r\n          isAuthenticated: action.payload.isAuthenticated\r\n        }\r\n      case \"STATI_UPDATED\":\r\n        return {\r\n          ...state,\r\n          stati: action.payload.stati\r\n        }\r\n      case \"SYNC_STATI_DATE\":\r\n        return {\r\n          ...state,\r\n          stati: action.payload.stati\r\n        }\r\n      case \"EDIT_PRAYER_STATUS\":\r\n        return {\r\n          ...state,\r\n          stati: action.payload.stati\r\n        }\r\n      case \"EDIT_PREFERENCES\":\r\n        return {\r\n          ...state,\r\n          preferences: action.payload.preferences\r\n        }\r\n      case \"SET_TIMINGS\":\r\n        return {\r\n          ...state,\r\n          timings: action.payload.timings\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { StateStore, StateProvider }","import { json2csv } from 'json-2-csv';\r\nimport store from 'store';\r\n\r\nexport function makeVerbose(items) {\r\n  const fullForms = {\r\n    o: \"Timely\",\r\n    n: \"-\",\r\n    m: \"Missed\",\r\n    d: \"Delayed\",\r\n    ex: \"Exempted\"\r\n  };\r\n  for (let item of items) {\r\n    for (let key in item) {\r\n      item[key] = fullForms[item[key]] || item[key];\r\n    }\r\n  }\r\n  return items;\r\n}\r\n\r\nexport function StringifySingleStati(temp, timestamp) {\r\n  return `${temp.Fajr},${temp.Zuhr},${temp.Asr},${temp.Maghrib},${temp.Isha},${new Date(timestamp || temp.timestamp).getTime()}`\r\n}\r\n\r\nexport function ParseSingleStringifiedStati(temp, isVerbose) {\r\n  const parts = temp.split(',');\r\n  return {\r\n    Fajr: parts[0], //make verbose\r\n    Zuhr: parts[1],\r\n    Asr: parts[2],\r\n    Maghrib: parts[3],\r\n    Isha: parts[4],\r\n    timestamp: new Date(parseInt(parts[5])).toISOString(),\r\n  }\r\n}\r\n\r\nfunction download(filename, text) {\r\n  var element = document.createElement('a');\r\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n  element.setAttribute('download', filename);\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n  element.click();\r\n  document.body.removeChild(element);\r\n  alert(\"Downloaded all of your data as a .csv file\")\r\n}\r\n\r\nexport const printAllData = () => {\r\n  if (window.confirm(\"This is an experimental feature. If you notice errors in the file generated, please report them\"))\r\n    json2csv(makeVerbose([...(store.get(\"abandonedStati\") || []).map(item => ParseSingleStringifiedStati(item)), ...store.get('stati')]), (err, csv) => download(`prayer-log-${new Date().toISOString()}.csv`, csv));\r\n}\r\n\r\nexport const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n\r\nexport function dateDiffInDays(a, b) {\r\n  // Discard the time and time-zone information.\r\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n\r\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\nexport function timeGreater(a = \"00:00\", b = \"00:01\") {\r\n  if (parseInt(a.split(':')[0]) > parseInt(b.split(':')[0])) return true;\r\n  else if (parseInt(a.split(':')[0]) === parseInt(b.split(':')[0]) && parseInt(a.split(':')[1]) > parseInt(b.split(':')[1])) return true;\r\n  else return false\r\n}\r\n\r\nexport function timeConvert(time) {\r\n  // Check correct time format and split into components\r\n  time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n  if (time.length > 1) { // If time format correct\r\n    time = time.slice(1);  // Remove full string match value\r\n    time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n    time[0] = +time[0] % 12 || 12; // Adjust hours\r\n  }\r\n  return time.join(''); // return adjusted time or original string\r\n}","import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst REACT_APP_FIREBASE_KEY=\"AIzaSyCkyFa5ag_ck0xsIEAvtp24FfZOllfiPvY\"\r\nconst REACT_APP_FIREBASE_DOMAIN=\"prayer-journal-e2e93.firebaseapp.com\"\r\nconst REACT_APP_FIREBASE_DATABASE=\"https://prayer-journal-e2e93.firebaseio.com\"\r\nconst REACT_APP_FIREBASE_PROJECT_ID=\"prayer-journal-e2e93\"\r\nconst REACT_APP_FIREBASE_STORAGE_BUCKET=\"prayer-journal-e2e93.appspot.com\"\r\nconst REACT_APP_FIREBASE_SENDER_ID=901455867465\r\n\r\nconst fire = firebase.initializeApp({\r\n  apiKey: REACT_APP_FIREBASE_KEY,\r\n  authDomain: REACT_APP_FIREBASE_DOMAIN,\r\n  databaseURL: REACT_APP_FIREBASE_DATABASE,\r\n  projectId: REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_APP_FIREBASE_SENDER_ID\r\n});\r\n\r\nfire.firestore().enablePersistence();\r\n\r\nexport default fire;","import store from 'store';\r\nimport { _MS_PER_DAY, dateDiffInDays, ParseSingleStringifiedStati } from '../Functions';\r\nimport fire from '../base';\r\n\r\nexport const defaultPreferences = {\r\n  calcMethod: 1,\r\n  theme: 'dark',\r\n  format: '12'\r\n}\r\n\r\nexport const signed = async (dispatch, creds, location) => {\r\n  if (creds.additionalUserInfo.isNewUser) {\r\n    let stati = [...(store.get(\"abandonedStati\") || []).map(item => ParseSingleStringifiedStati(item)), ...(store.get(\"stati\") || [])]; //see if stati is saved locally\r\n    if (!stati || stati.length === 0) {\r\n      stati = []; //initialise with default value if not available\r\n      const temp = { Fajr: 'n', Zuhr: 'n', Asr: 'n', Maghrib: 'n', Isha: 'n' };\r\n      const msRightNow = new Date().getTime();\r\n      for (let i = 6; i >= 0; i--) {\r\n        let date = new Date(msRightNow - i * _MS_PER_DAY);\r\n        stati.push({ ...temp, timestamp: date.toISOString(), unixTimestamp: date.getTime() });\r\n      }\r\n    } else {\r\n      stati.forEach(status => status.unixTimestamp = new Date(status.timestamp || status.date).getTime());\r\n    }\r\n\r\n    let preferences = store.get(\"preferences\");\r\n    if (!preferences) {\r\n      preferences = { ...defaultPreferences }\r\n    }\r\n    preferences.location = location;\r\n\r\n    const batch = fire.firestore().batch();\r\n    const userRef = fire.firestore().collection('users').doc(creds.user.uid);\r\n    stati.forEach(doc => {\r\n      batch.set(userRef.collection('stati').doc(new Date(doc.unixTimestamp).toDateString()), doc);\r\n    });\r\n    batch.set(userRef, { preferences }, { merge: true });\r\n    await batch.commit();\r\n  }\r\n}\r\n\r\n// export const register = (dispatch, formState) => {\r\n//   // formState.location = { city: formState.city, country: formState.country }\r\n//   store.set(\"preferences\", {\r\n//     ...formState\r\n//   });\r\n//   store.set(\"hasInitialised\", true);\r\n\r\n//   const stati = [];\r\n//   const temp = { Fajr: 'n', Zuhr: 'n', Asr: 'n', Maghrib: 'n', Isha: 'n' };\r\n//   const msRightNow = new Date().getTime();\r\n//   for (let i = 6; i >= 0; i--) {\r\n//     stati.push({ ...temp, timestamp: new Date(msRightNow - i * _MS_PER_DAY).toISOString() });\r\n//   }\r\n\r\n//   store.set(\"stati\", stati);\r\n//   dispatch({ type: \"INITIALISE_SUCCESS\", \"source\": \"reg.js\", payload: { preferences: formState, stati } });\r\n// }\r\n\r\n// export const unregister = (dispatch) => {\r\n//   dispatch({ type: \"INITIALISE_UNDO\" });\r\n//   store.clearAll();\r\n//   window.location.reload();\r\n// }\r\n\r\n// export const syncStatiDate = (dispatch, stati) => {\r\n//   return;\r\n//   const newStati = [...stati];\r\n//   const timestamp = new Date();\r\n//   const lastTimestamp = new Date(stati[stati.length - 1].timestamp || stati[stati.length - 1].date);\r\n//   const daysPassed = dateDiffInDays(lastTimestamp, timestamp);\r\n\r\n//   if (daysPassed <= 0) return;\r\n//   let dataToAbandon = [];\r\n//   for (let i = 1; i <= daysPassed; i++) {\r\n//     dataToAbandon.push(StringifySingleStati(newStati.shift(), (lastTimestamp.getTime() + ((i - 7) * _MS_PER_DAY))))\r\n//     newStati.push({\r\n//       Fajr: 'n',\r\n//       Zuhr: 'n',\r\n//       Asr: 'n',\r\n//       Maghrib: 'n',\r\n//       Isha: 'n',\r\n//       timestamp: new Date(lastTimestamp.getTime() + (i * _MS_PER_DAY)).toISOString()\r\n//     });\r\n//   }\r\n\r\n//   const abandonedStati = store.get('abandonedStati') || [];\r\n//   store.set('abandonedStati', [...abandonedStati, ...dataToAbandon]);\r\n//   dispatch({ type: \"SYNC_STATI_DATE\", payload: { stati: newStati } });\r\n//   store.set('stati', newStati);\r\n// }\r\n\r\n// export const editPrayerStatus = (dispatch, stati, newStatus, dayIndex = stati.length - 1) => {\r\n//   const newStati = [...stati];\r\n//   console.log(newStatus);\r\n//   newStati[dayIndex] = { ...newStati[dayIndex], ...newStatus }\r\n//   dispatch({ type: \"EDIT_PRAYER_STATUS\", payload: { stati: newStati } });\r\n//   store.set('stati', newStati);\r\n// }\r\n\r\n\r\nexport const syncStatiDate = (dispatch, stati, user) => {\r\n  const newStati = [];\r\n  const timestamp = new Date();\r\n  const lastTimestamp = new Date(stati[stati.length - 1].timestamp || stati[stati.length - 1].date);\r\n  const daysPassed = dateDiffInDays(lastTimestamp, timestamp);\r\n\r\n  if (daysPassed <= 0) return;\r\n  for (let i = 1; i <= daysPassed; i++) {\r\n    const date = new Date(lastTimestamp.getTime() + (i * _MS_PER_DAY)).toISOString();\r\n    newStati.push({\r\n      Fajr: 'n',\r\n      Zuhr: 'n',\r\n      Asr: 'n',\r\n      Maghrib: 'n',\r\n      Isha: 'n',\r\n      timestamp: date,\r\n      unixTimestamp: new Date(date).getTime()\r\n    });\r\n  }\r\n  const batch = fire.firestore().batch();\r\n  const userRef = fire.firestore().collection('users').doc(user.uid);\r\n  newStati.forEach(doc => {\r\n    batch.set(userRef.collection('stati').doc(new Date(doc.unixTimestamp).toDateString()), doc);\r\n  });\r\n  batch.commit();\r\n}\r\n\r\nexport const editPrayerStatus = (user, uid, key, value) => {\r\n  fire.firestore().collection('users').doc(user.uid).collection('stati').doc(uid).update({ [key]: value });\r\n}\r\n\r\nexport const editPreferences = (dispatch, preferences, user) => {\r\n  // dispatch({ type: \"EDIT_PREFERENCES\", payload: { preferences: { ...preferences } } });\r\n  // store.set(\"preferences\", preferences);\r\n  fire.firestore().collection('users').doc(user.uid).update({ preferences: { ...preferences } });\r\n}\r\n\r\nexport const setTimings = (dispatch, timings) => {\r\n  timings.Zuhr = timings.Dhuhr;\r\n  dispatch({ type: \"SET_TIMINGS\", payload: { timings } });\r\n  store.set(\"timings\", timings);\r\n}","import React from 'react';\r\nimport LoadingGIF from './loading.gif';\r\nimport './Loading.scss';\r\n\r\nexport default function Loading(props) {\r\n  if (!props.msg)\r\n    return (\r\n      <div className={\"loading-container\" + (props.mini ? \" mini\" : \"\")}>\r\n        <img className={'loading' + (props.bright ? \" bright\" : \" dark\")} width={props.width || '50px'} src={LoadingGIF} alt=\"\" style={props.style} />\r\n      </div>\r\n    )\r\n  else\r\n    return (\r\n      <div className='loading-container'>\r\n        <img className={'loading' + (props.bright ? \" bright\" : \" dark\")} width={props.width || '50px'} src={LoadingGIF} alt=\"\" style={props.style} />\r\n        <div className=''>{this.props.msg}</div>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport csc from 'country-state-city';\r\n\r\nexport default function LocationSelect({ onFinal, _countryID, _stateID, _cityID, className }) {\r\n\r\n  const countries = csc.getAllCountries();\r\n  const [states, setStates] = useState(_countryID ? csc.getStatesOfCountry(_countryID) : null);\r\n  const [cities, setCities] = useState(_stateID ? csc.getCitiesOfState(_stateID) : null);\r\n  const [formState, setFormState] = useState({ _countryID, _stateID, _cityID });\r\n\r\n  const formUpdated = ({ target }) => {\r\n    if (target.name === \"country\") {\r\n      setFormState({\r\n        ...formState,\r\n        country: target.options[target.selectedIndex].innerHTML,\r\n        _countryID: target.value\r\n      });\r\n      setStates(csc.getStatesOfCountry(target.value));\r\n      setCities(null);\r\n    } else if (target.name === \"state\") {\r\n      setFormState({\r\n        ...formState,\r\n        country: csc.getCountryById(formState._countryID).name,\r\n        state: target.options[target.selectedIndex].innerHTML,\r\n        _stateID: target.value\r\n      });\r\n      setCities(csc.getCitiesOfState(target.value));\r\n    } else if (target.name === \"city\") {\r\n      const newState = {\r\n        ...formState,\r\n        country: csc.getCountryById(formState._countryID).name,\r\n        state: csc.getStateById(formState._stateID).name,\r\n        city: target.options[target.selectedIndex].innerHTML,\r\n        _cityID: target.value\r\n      };\r\n      setFormState(newState);\r\n      onFinal({ target: { name: \"location\", value: newState } });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <select value={formState._countryID} name=\"country\" id=\"country\" className={\"slct \" + (className || \"\")} onChange={formUpdated}>\r\n        <option>Select Country</option>\r\n        {countries.map((option, i) => <option key={option.id} value={option.id}>{option.name}</option>)}\r\n      </select>\r\n\r\n      {states ?\r\n        (<select value={formState._stateID} name=\"state\" id=\"state\" className=\"slct\" style={{ marginTop: \"0.25rem\" }} onChange={formUpdated}>\r\n          <option>Select State</option>\r\n          {states.map((option, i) => <option key={option.id} value={option.id}>{option.name}</option>)}\r\n        </select>)\r\n        : null}\r\n\r\n      {cities ?\r\n        (<select value={formState._cityID} name=\"city\" id=\"city\" className=\"slct\" style={{ marginTop: \"0.25rem\" }} onChange={formUpdated}>\r\n          <option>Select City</option>\r\n          {cities.map((option, i) => <option key={option.id} value={option.id}>{option.name}</option>)}\r\n        </select>)\r\n        : null}\r\n    </>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './optionSwitch.scss';\r\n\r\nexport class OptionSwitch extends Component {\r\n\r\n  state = {\r\n    value: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    const value = this.props.value || this.props.options[0];\r\n    this.setState({ value });\r\n    if (this.props.onChange) this.props.onChange(value);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ value });\r\n    if (this.props.onChange) this.props.onChange(value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"optionSwitch \" + (this.props.className || '')}>\r\n        {this.props.options.map((option, i) => (\r\n          <label key={i} className='optionContainer'>\r\n            <input\r\n              className='option'\r\n              type='radio'\r\n              checked={this.state.value === option}\r\n              value={option}\r\n              onChange={this.handleChange}>\r\n            </input>\r\n            <span>{option}</span>\r\n          </label>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OptionSwitch","import React from 'react';\r\n\r\nexport default function SignModule({ isFor, formUpdated, formState, disabled }) {\r\n  return (\r\n    <div className=\"sign-module\">\r\n      <label disabled={disabled} className=\"sign-label\" htmlFor={isFor}>{isFor.replace(/^./, isFor[0].toUpperCase())}</label>\r\n      <input disabled={disabled} className=\"sign-input\" required name={isFor} onChange={formUpdated} value={formState[isFor]} type={isFor} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { StateStore } from '../store';\r\nimport './Registration.scss';\r\nimport { signed } from '../Actions/UserActions';\r\nimport Loading from './Loading';\r\nimport LocationSelect from './LocationSelect';\r\nimport OptionSwitch from './optionSwitch';\r\nimport SignModule from './SignModule';\r\nimport fire from '../base';\r\nimport firebase from 'firebase';\r\n\r\nexport const options = [\r\n  \"Shia Ithna-Ansari\",\r\n  \"University of Islamic Sciences, Karachi\",\r\n  \"Islamic Society of North America\",\r\n  \"Muslim World League\",\r\n  \"Umm Al-Qura University, Makkah\",\r\n  \"Egyptian General Authority of Survey\",\r\n  \"Institute of Geophysics, University of Tehran\",\r\n  \"Gulf Region\",\r\n  \"Kuwait\",\r\n  \"Qatar\",\r\n  \"Majlis Ugama Islam Singapura, Singapore\",\r\n  \"Union Organization islamic de France\",\r\n  \"Diyanet İşleri Başkanlığı, Turkey\",\r\n  \"Spiritual Administration of Muslims of Russia\"]\r\n\r\nexport default function Registration() {\r\n\r\n  const { dispatch, state } = useContext(StateStore);\r\n  const { preferences, hasInitialised } = state;\r\n  const location = preferences?.location || null;\r\n\r\n  const [formState, setFormState] = useState({ location });\r\n  const [AuthType, setAuthType] = useState(\"SignIn\");\r\n  const [error, setError] = useState(hasInitialised ? { message: 'Update: This App has been connected to a database (finally). To continue, please SIGNUP. The data on your device will be merged into the new account and synced with the database.' } : null);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const formUpdated = ({ target }) => {\r\n    setFormState({ ...formState, [target.name]: target.value });\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const { password, email, location } = formState;\r\n    if (AuthType === 'SignIn') signin(email, password)\r\n    else if (AuthType === 'SignUp') signup(email, password, location)\r\n  }\r\n  //ask from databse if he has initialised? continue : send defaults info or local data if available\r\n  const onSigned = async (creds) => {\r\n    await signed(dispatch, creds, formState.location);\r\n    setLoading(false);\r\n  };\r\n\r\n  const onError = err => {\r\n    setError(err);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // setError(null);\r\n    if (AuthType === 'Google') {\r\n      setLoading(true);\r\n      let provider = new firebase.auth.GoogleAuthProvider();\r\n      fire.auth().signInWithPopup(provider).then(onSigned).catch(onError);\r\n    }\r\n  }, [AuthType]);\r\n\r\n  const signin = (email, password, location) => {\r\n    fire.auth().signInWithEmailAndPassword(email, password).then(onSigned).catch(onError);\r\n  }\r\n\r\n  const signup = (email, password, location) => {\r\n    if (email && password && location && location.city) {\r\n      fire.auth().createUserWithEmailAndPassword(email, password).then(onSigned).catch(onError);\r\n    } else {\r\n      onError({ message: \"Please fill all the fields\" });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <div className=\"card register-card\">\r\n        <div className=\"heading\">\r\n          Hey there!<br></br>\r\n        </div>\r\n        <OptionSwitch onChange={setAuthType} options={['SignUp', 'Google', 'SignIn',]}></OptionSwitch>\r\n        {\r\n          error ? <div className=\"error\">{error.message}</div> : null\r\n          // error ? <div className=\"error\">{error.message} {hasInitialised ? (<>Use local data? <input type=\"checkbox\" onChange={formUpdated} checked name=\"useLocal\" id=\"\" /></>):null}</div> : null\r\n        }\r\n        {\r\n          (AuthType === 'SignUp' || AuthType === 'SignIn') ?\r\n            <form onSubmit={onSubmit} className=\"sign-modules\">\r\n              <SignModule disabled={isLoading} isFor=\"email\" formUpdated={formUpdated} formState={formState} ></SignModule>\r\n              <SignModule disabled={isLoading} isFor=\"password\" formUpdated={formUpdated} formState={formState} ></SignModule>\r\n              {\r\n                AuthType === 'SignUp' ?\r\n                  <div className=\"sign-module\">\r\n                    <label className=\"sign-label\" htmlFor=\"location\">Location</label>\r\n                    <div>\r\n                      <LocationSelect\r\n                        onFinal={formUpdated}\r\n                        _countryID={formState?.location?._countryID}\r\n                        _stateID={formState?.location?._stateID}\r\n                        _cityID={formState?.location?._cityID}\r\n                      ></LocationSelect></div></div> : null\r\n              }\r\n              {\r\n                isLoading ? null :\r\n                  <input type=\"Submit\" onChange={() => { }} className=\"btn sign primary clickable\" value={AuthType}></input>\r\n              }\r\n            </form> : null\r\n        }\r\n        {\r\n          isLoading ? <Loading style={{ marginTop: \"1rem\" }} bright></Loading> : null\r\n        }\r\n\r\n\r\n\r\n        {/* <p>Before we begin, select a Prayer times calculation method and your location</p> */}\r\n\r\n        {/* <select onChange={formUpdated} value={formState.calcMethod} name=\"calcMethod\">\r\n          {options.map((option, i) => <option value={i}>{option}</option>)}\r\n        </select>\r\n\r\n        <LocationSelect onFinal={formUpdated}></LocationSelect>\r\n\r\n        {(formState.location) ? <button className=\"btn primary clickable\" onClick={() => register(dispatch, formState)}>Save</button> : null} */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './SettingsModal.scss';\r\nimport { options } from './Registeration';\r\nimport { StateStore } from '../store';\r\nimport { editPreferences } from '../Actions/UserActions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport LocationSelect from './LocationSelect';\r\nimport fire from '../base';\r\n\r\nexport default function SettingsModal({ modalIsOpen, toggle }) {\r\n  const { dispatch, state: { preferences, user } } = useContext(StateStore);\r\n  const [formState, setFormState] = useState(preferences);\r\n  const [dataChanged, setDataChanged] = useState(false);\r\n  const location = preferences.location;\r\n\r\n  const formUpdated = e => {\r\n    setDataChanged(true);\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        onRequestClose={() => toggle(false)}\r\n        className={\"modal settings-modal \" + preferences.theme}\r\n        overlayClassName=\"modal-overlay settings-modal-overlay\"\r\n      ><div>\r\n          <div className=\"heading\">{user?.displayName || user?.email}</div>\r\n          <div style={{ marginBottom: \"2rem\" }} className=\"preference\">\r\n            <label>Account</label>\r\n            <div>\r\n              <button className=\"btn clickable primary\" onClick={() => {\r\n                if (window.confirm(\"Are you sure?\")) fire.auth().signOut();\r\n              }}>Sign Out</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"preference\">\r\n            <label>Timing</label>\r\n            <select className=\"slct input\" name=\"calcMethod\" onChange={formUpdated} value={formState.calcMethod}>\r\n              {options.map((option, i) => <option value={i} key={i}>{option}</option>)}\r\n            </select>\r\n          </div>\r\n          <div className=\"preference\">\r\n            <label>Theme</label>\r\n            <select className=\"slct input\" name=\"theme\" onChange={formUpdated} value={formState.theme}>\r\n              <option value=\"dark\">Dark</option>\r\n              <option value=\"light\">Light</option>\r\n              <option value=\"auto\">Auto</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"preference\">\r\n            <label>Format</label>\r\n            <select className=\"slct input\" name=\"timeFormat\" onChange={formUpdated} value={formState.timeFormat}>\r\n              <option value=\"24\">24 Hour Clock</option>\r\n              <option value=\"12\">12 Hour Clock</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"preference\">\r\n            <label>Location</label>\r\n            <div>\r\n              <LocationSelect\r\n                onFinal={formUpdated}\r\n                _countryID={location._countryID}\r\n                _stateID={location._stateID}\r\n                _cityID={location._cityID}\r\n              >\r\n              </LocationSelect>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"spacer\"></div> */}\r\n          <div className=\"submitContainer\" style={{ position: \"sticky\", bottom: \"0px\" }}>\r\n            <button className=\"btn primary clickable\" onClick={() => toggle(false)}>\r\n              <FontAwesomeIcon className=\"icon\" icon={faTimes}></FontAwesomeIcon> <span>Nevermind</span>\r\n            </button>\r\n            <button className={\"btn\" + (dataChanged ? \" primary clickable\" : \"\")} onClick={dataChanged ? (() => { editPreferences(dispatch, formState, user); toggle(false) }) : null}>\r\n              <FontAwesomeIcon className=\"icon\" icon={faSave}></FontAwesomeIcon> <span>Save</span>\r\n            </button>\r\n          </div>\r\n          {/* <div className=\"spacer\"></div>\r\n          <div style={{ marginBottom: \"2rem\" }} className=\"preference\">\r\n            <label>Data</label>\r\n            <div>\r\n              <button className=\"btn clickable primary\" onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to delete all data? This data will not be recoverable\")) unregister(dispatch);\r\n              }}>Clear All Data</button>\r\n              <button className=\"btn clickable primary\" onClick={printAllData}>Export All Data</button>\r\n            </div>\r\n          </div> */}\r\n          {/* <div className=\"spacer\"></div> */}\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nModal.setAppElement('body');","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport './AboutModal.scss';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function AboutModal({ modalIsOpen, toggle, theme }) {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        onRequestClose={() => toggle(false)}\r\n        className={\"modal about-modal \" + theme}\r\n        overlayClassName=\"modal-overlay settings-modal-overlay\"\r\n      ><div>\r\n          <div className=\"whatsnew\">\r\n            <div className=\"title\">What's New?</div>\r\n            <ul>\r\n              <span style={{ fontWeight: \"bold\" }}>13 May, 2020...</span>\r\n              <li>Database support!</li>\r\n              <li>Your data will now be uploaded to a database, and synced in real time. You can sign in to the same account on multiple devices, of any type, and the data will sync across them in real time.</li>\r\n              <li>The history feature allows you to view recorded data from the past.</li>\r\n            </ul>\r\n          </div>\r\n          Prayer Journal allows you to record the statuses of your prayers as you offer them. A Quranic verse is displayed in the Quran Card, fetched from a third party API, which is refreshed once a day. Prayer timings are fetched according to your location from another external API. This application is stricly for pupils following Islam as their religion, and supports the five compulsory daily prayers. ALL of the past and current data is saved in a database and is synced between your devices.\r\n        <br></br>\r\n          This application has been built by, and is maintained by the entity represented by <a href=\"https://umerkay.github.io\" target=\"_blank\" rel=\"noopener noreferrer\" >umerkay</a>.\r\n          This is primarily a personal project that is made available for public use on Github Pages.\r\n          <br></br>\r\n          This is a Progressive Web App (PWA) and can work offline; this same link works both for desktop browsers and on phone browsers. Browsers supporting PWA installations, for example Chrome, allow this to be locally installed on desktops and phones alike.\r\n          Your data, as of now, is stored locally and I am yet to add mechanism for syncing data between devices, for example between your desktop and your phone.\r\n          <br></br>\r\n          If you have suggestions and/or requests for this app, you can open issues on the Github repository. If you do not know how to do that, send those to me personally (contact information is available on my portfolio).\r\n        </div>\r\n        <button className=\"btn primary clickable\" onClick={() => toggle(false)}>\r\n          <span>Okay</span>\r\n        </button>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nModal.setAppElement('body');","import React from 'react';\r\nimport './HeaderMobile.scss';\r\n\r\nexport default function HeaderMobile(props) {\r\n  return (\r\n    <div id=\"header-mobile\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport './QuranCard.scss'\r\nimport Loading from './Loading';\r\nimport store from 'store';\r\nimport { faAngleDoubleRight, faExclamationTriangle, faSync } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst shouldUpdateVerse = verse => {\r\n  if (verse.timestamp) return new Date().toDateString() !== new Date(verse.timestamp).toDateString()\r\n  else return verse.date !== new Date().toLocaleDateString(verse.locale)\r\n}\r\n\r\nexport default function QuranCard() {\r\n  const [verse, setVerse] = React.useState(store.get(\"verse\") || { isLoading: true });\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const fetchData = async (shouldForce = false) => {\r\n    if (shouldForce || shouldUpdateVerse(verse)) {\r\n      setVerse({ isLoading: true });\r\n\r\n      let res;\r\n      try {\r\n        res = await fetch(\"https://cors-anywhere.herokuapp.com/https://salamquran.com/en/api/v6/aya/day\");\r\n        if (!res.ok) throw new Error(res);\r\n      } catch (err) {\r\n        setVerse({ isLoading: false });\r\n        setError(\"The Quran API is unreachable right now\");\r\n        return;\r\n      }\r\n\r\n      let json = (await res.json()).result;\r\n      let translate = json.translate;\r\n\r\n      const newVerse = {\r\n        reference: json.sura_detail.tname + \" \" + translate.sura + \":\" + translate.aya,\r\n        sura: translate.sura, aya: translate.aya,\r\n        text: translate.text,\r\n        isLoading: false,\r\n        arabic: json.text,\r\n        surahName: json.sura_detail.tname,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n      setError(null);\r\n      store.set(\"verse\", newVerse);\r\n      setVerse(newVerse);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"card quran-card\">\r\n      {\r\n        (error && !verse.isLoading) ?\r\n          <div className=\"error\">\r\n            <FontAwesomeIcon className=\"icon\" icon={faExclamationTriangle}></FontAwesomeIcon>\r\n            <span>{error}</span>\r\n          </div> : verse.isLoading ?\r\n            <>\r\n              <div className=\"reference\" style={{ width: 150 }}><div className=\"filler\" style={{ animationDuration: \"3s\" }}></div></div>\r\n              <Loading dark></Loading>\r\n            </>\r\n            :\r\n            <>\r\n              <div className=\"reference\">Quran, {verse.reference}</div>\r\n              <div className=\"verse arabic\">{verse.arabic}</div>\r\n              <div className=\"verse\">\"{verse.text}\"</div>\r\n            </>\r\n      }\r\n\r\n      <div className=\"more\">\r\n        {(error && !verse.isLoading) ?\r\n          <button className=\"more\" onClick={fetchData} style={{ width: \"120px\", textAlign: \"center\" }}>Retry</button> :\r\n          verse.isLoading ?\r\n            <button className=\"more\" style={{ width: \"120px\", textAlign: \"center\" }}><span className=\"filler\"></span></button> :\r\n            <>\r\n              <a style={{ cursor: \"pointer\", marginRight: \"0.5rem\" }} className=\"more clickable\" onClick={() => fetchData(true)}>\r\n                <span><FontAwesomeIcon icon={faSync}></FontAwesomeIcon></span>\r\n              </a>\r\n              <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://quran.com/${verse.sura}/${verse.aya}`} className=\"more clickable\">\r\n                Continue Reading <span><FontAwesomeIcon icon={faAngleDoubleRight}></FontAwesomeIcon></span>\r\n              </a>\r\n            </>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './GeneralCard.scss'\r\n\r\nexport default function GeneralCard(props) {\r\n  return (\r\n    <div className={\"card general-card \" + (props.onClick ? \" clickable \" : \"\") + (props.className || \"\")} onClick={props.onClick}>\r\n      <span>{props.children}</span>\r\n      <span>{props.text}</span>\r\n    </div>\r\n  )\r\n}\r\n","export const names = ['Fajr', 'Zuhr', 'Asr', 'Maghrib', 'Isha'];","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './PrayerModal.scss';\r\nimport { names } from '../Data';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faTimes, faSave } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function PrayerModal({ modalIsOpen, toggle, save, prayerState, theme }) {\r\n  const [formData, setFormData] = useState({ ...prayerState });\r\n  // const [dataChanged, setDataChanged] = useState(false);\r\n\r\n  const setPrayerName = (e) => {\r\n    setFormData({ ...formData, name: names[e.target.value] });\r\n    // setDataChanged(true);\r\n  }\r\n  // const setPrayerStatus = (e) => {\r\n  //   setFormData({ ...formData, status: e.target.value });\r\n  //   setDataChanged(true);\r\n  // }\r\n  const chars = [\"n\", \"o\", \"d\", \"m\", \"ex\"];\r\n  const msgs = [\"Not Sure\", \"Timely\", \"Delayed\", \"Missed\", \"Exempted\"];\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        onRequestClose={() => toggle(false)}\r\n        className={\"modal prayer-modal \" + theme}\r\n        overlayClassName=\"modal-overlay prayer-modal-overlay\"\r\n      >\r\n        <div className=\"heading\">Record the status of\r\n          <select style={{marginBottom: 0}} value={names.indexOf(formData.name)} className=\"slct\" onChange={setPrayerName}>\r\n            {names.map((name, index) => (<option\r\n              name={name}\r\n              value={index}\r\n              key={name}\r\n            >{name}</option>))}\r\n          </select>\r\n         Prayer\r\n        {\r\n            prayerState.timestamp ? <><br></br><span>for {new Date(prayerState.timestamp).toDateString().slice(4)}</span></> : null\r\n          }\r\n        </div>\r\n        {\r\n          chars.map((char, i) => (\r\n            <button\r\n              key={char}\r\n              style={{ color: (char === 'n' ? \"black\" : \"white\") }}\r\n              className={\"btn clickable charButton \" + char}\r\n              onClick={() => { save(formData, char); toggle(false); }}>\r\n              <span>{msgs[i]}</span>\r\n            </button>\r\n          ))\r\n        }\r\n        {/* <select name=\"\" id=\"\" value={formData.status} className=\"slct\" onChange={setPrayerStatus}>\r\n          <option value=\"n\">Not sure</option>\r\n          <option value=\"o\">Timely</option>\r\n          <option value=\"d\">Delayed</option>\r\n          <option value=\"m\">Missed</option>\r\n          <option value=\"ex\">Exempted</option>\r\n        </select>\r\n        <div>\r\n          <button className=\"btn primary clickable\" onClick={() => toggle(false)}>\r\n            <FontAwesomeIcon className=\"icon\" icon={faTimes}></FontAwesomeIcon> <span>Nevermind</span>\r\n          </button>\r\n          <button className={\"btn\" + (dataChanged ? \" primary clickable\" : \"\")} onClick={dataChanged ? (() => { save(formData); toggle(false); }) : null}>\r\n            <FontAwesomeIcon className=\"icon\" icon={faSave}></FontAwesomeIcon> <span>Save</span>\r\n          </button>\r\n        </div> */}\r\n      </Modal>\r\n    </div >\r\n  )\r\n}\r\n\r\nModal.setAppElement('body');","import React, { useContext, useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './StatiModal.scss';\r\nimport { StateStore } from '../store';\r\nimport fire from '../base';\r\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker'\r\nimport Loading from './Loading';\r\nimport { names } from '../Data';\r\n\r\nexport default function StatiModal({ modalIsOpen, toggle }) {\r\n  const { state: { preferences, user } } = useContext(StateStore);\r\n  // const today = new Date();\r\n  // const otherDay = new Date();\r\n  // otherDay.setDate(today.getDate() - 6);\r\n  const [range, setRange] = useState(null);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [queryResults, setQueryResults] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (range)\r\n      rangeUpdated();\r\n  }, [range]);\r\n\r\n  const rangeUpdated = param => {\r\n    setIsFetching(true);\r\n    setError(null);\r\n\r\n    fire.firestore()\r\n      .collection('users')\r\n      .doc(user.uid)\r\n      .collection('stati')\r\n      .where(\"unixTimestamp\", \">=\", range[0].getTime())\r\n      .where(\"unixTimestamp\", \"<=\", range[1].getTime())\r\n      .get().then(resp => {\r\n        const data = resp.docs.map(doc => doc.data());\r\n        setIsFetching(false);\r\n        if (data.length === 0) {\r\n          setError(\"There are no records in this range of dates\");\r\n          setQueryResults(null);\r\n          return\r\n        }\r\n        setQueryResults(data);\r\n      }).catch(e => { console.log(e); setIsFetching(false); setQueryResults(null); setError(e.message) });\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        onRequestClose={() => toggle(false)}\r\n        className={\"modal stati-modal \" + preferences.theme}\r\n        overlayClassName=\"modal-overlay stati-modal-overlay\"\r\n      >\r\n        <div className=\"heading\">Select History Range</div>\r\n        <div className=\"slctHolder\">\r\n          <DateRangePicker onChange={setRange} value={range} />\r\n        </div>\r\n        {isFetching ? <><div className=\"spacer\"></div><Loading bright={preferences.theme === 'dark'}></Loading></> : null}\r\n        {error ? <><div className=\"spacer\"></div><div className=\"m error\">{error}</div></> : null}\r\n        {queryResults ? <div className=\"dataDisplay\">\r\n          <span></span>\r\n          {names.map(name => (<span key={name}>{name}</span>))}\r\n          {queryResults.map(stati => (\r\n            <>\r\n              <span style={{ textAlign: \"left\" }}>{new Date(stati.unixTimestamp).toDateString()}</span>\r\n              <span className={\"status \" + stati.Fajr}></span>\r\n              <span className={\"status \" + stati.Zuhr}></span>\r\n              <span className={\"status \" + stati.Asr}></span>\r\n              <span className={\"status \" + stati.Maghrib}></span>\r\n              <span className={\"status \" + stati.Isha}></span>\r\n            </>\r\n          ))}\r\n        </div> : null}\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nModal.setAppElement('body');","import React, { useContext, useState } from 'react';\r\nimport { StateStore } from '../store';\r\nimport './WeeklyCard.scss';\r\nimport { syncStatiDate, editPrayerStatus } from '../Actions/UserActions';\r\nimport { names } from '../Data';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarWeek, faHistory } from '@fortawesome/free-solid-svg-icons';\r\nimport Loading from './Loading';\r\nimport PrayerModal from './PrayerModal';\r\nimport StatiModal from './StatiModal';\r\n\r\n// const getIndexedForm = (_stati = []) => {\r\n//   if (_stati.length === 0) return null;\r\n//   const obj = {};\r\n//   _stati.forEach(status => obj[new Date(status.unixTimestamp).toDateString()] = status);\r\n//   return obj;\r\n// }\r\n\r\nfunction shouldUpdateStati(stati) {\r\n  const lastStatus = stati[stati.length - 1];\r\n  if (lastStatus.timestamp) return new Date().toDateString() !== new Date(lastStatus.timestamp).toDateString()\r\n  else return new Date().toLocaleDateString(lastStatus.locale) !== lastStatus.date\r\n}\r\n\r\nfunction isDateToday(date) {\r\n  return new Date().toDateString() === new Date(date).toDateString();\r\n}\r\n\r\nexport default function WeeklyCard(props) {\r\n  const { dispatch, state: { stati, user, preferences } } = useContext(StateStore);\r\n  const [statusModalState, setStatusModalState] = useState(false);\r\n  const [statiModalState, setStatiModalState] = useState(false);\r\n  const [prayerState, setPrayerState] = useState({});\r\n\r\n  // const displayAtOnce = 7;\r\n  // const min = new Date();\r\n  // min.setDate(min.getDate() - displayAtOnce + 1);\r\n  // const [dateRange, setDateRange] = useState({\r\n  //   min: min.toDateString(),\r\n  //   max: new Date().toDateString()\r\n  // });\r\n  // const [allStati, setAllStati] = useState(getIndexedForm(stati));\r\n  // const [isFetching, setIsFetching] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   if (stati)\r\n  //     setAllStati({ ...allStati, ...getIndexedForm(stati) });\r\n  //   else setAllStati(null);\r\n  // }, [stati]);\r\n\r\n  if (!stati) return (\r\n    // if (!stati || !allStati) return (\r\n    <div className=\"card weekly-card dark loading\">\r\n      <Loading bright></Loading>\r\n    </div>\r\n  )\r\n\r\n  //if latest date in data is not today, add today's entry and remove first oldest entry\r\n  if (shouldUpdateStati(stati)) {\r\n    syncStatiDate(dispatch, stati, user);\r\n  }\r\n\r\n  // const fetchStati = (direction) => {\r\n  //   let d1, d2;\r\n  //   if (direction === -1) {\r\n  //     d1 = new Date(dateRange.min);\r\n  //     d2 = new Date();\r\n  //     d2.setDate(d1.getDate() - 7);\r\n  //     setIsFetching(\"prev\");\r\n  //   } else {\r\n  //     d2 = new Date(dateRange.max);\r\n  //     d1 = new Date();\r\n  //     d1.setDate(Math.min(d2.getDate() + 8, new Date().getDate()));\r\n  //     d2.setDate(d1.getDate() - 6);\r\n  //     setIsFetching(\"next\");\r\n  //   }\r\n\r\n  //   fire.firestore()\r\n  //     .collection('users')\r\n  //     .doc(user.uid)\r\n  //     .collection('stati')\r\n  //     .where(\"unixTimestamp\", \">=\", d2.getTime())\r\n  //     .where(\"unixTimestamp\", \"<=\", d1.getTime())\r\n  //     .get().then(resp => {\r\n  //       const data = resp.docs.map(doc => doc.data());\r\n  //       setIsFetching(false);\r\n  //       if (data.length === 0) return console.log(\"none\");\r\n  //       console.log(getIndexedForm(data));\r\n  //       setAllStati({ ...allStati, ...getIndexedForm(data) });\r\n  //       setDateRange({\r\n  //         min: new Date(data[0].unixTimestamp).toDateString(),\r\n  //         max: new Date(data[data.length - 1].unixTimestamp).toDateString()\r\n  //       });\r\n  //     }).catch(console.log);\r\n  // }\r\n\r\n  let dayNames = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\r\n  // let statuses = ['o', 'd', 'm', 'n'];\r\n\r\n  let statiToShow = [...stati];\r\n  // let date = new Date(dateRange.min);\r\n  // for (let i = 0; i < displayAtOnce; i++) {\r\n  //   if (allStati[date.toDateString()])\r\n  //     statiToShow.push(allStati[date.toDateString()])\r\n  //   date.setDate(date.getDate() + 1);\r\n  // }\r\n\r\n  const status = names.map(name => statiToShow.map(status => status[name])); //usable format\r\n  // const day = new Date(statiToShow[statiToShow.length - 1].timestamp || statiToShow[statiToShow.length - 1].date).getDay();\r\n  const days = statiToShow.map(status => dayNames[new Date(status.unixTimestamp).getDay()]);\r\n  const editStatus = (name, status, dayIndex) => {\r\n    // status = statuses[(statuses.indexOf(status) + 1) % statuses.length];\r\n    editPrayerStatus(user, statiToShow[dayIndex].uid, name, status);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card weekly-card dark\">\r\n      {\r\n        !statusModalState ? null :\r\n          <PrayerModal theme={preferences.theme} save={(formData, char) => { editStatus(formData.name, char, prayerState.dayIndex) }} prayerState={prayerState} modalIsOpen={statusModalState} toggle={setStatusModalState}></PrayerModal>\r\n      }\r\n      {\r\n        !statiModalState ? null :\r\n          <StatiModal theme={preferences.theme} modalIsOpen={statiModalState} toggle={setStatiModalState}></StatiModal>\r\n      }\r\n      <div className=\"heading\" style={{ position: \"relative\" }}>\r\n        {/* <span style={{ left: \"1rem\", position: \"absolute\" }} className=\"clickable\">\r\n          {isFetching !== 'prev' ?\r\n            <FontAwesomeIcon icon={faArrowLeft} className='clickable-icon' onClick={() => fetchStati(-1)}></FontAwesomeIcon> :\r\n            <Loading bright={preferences.theme === 'dark'} mini></Loading>}\r\n        </span> */}\r\n        <span>\r\n          <FontAwesomeIcon icon={faCalendarWeek}></FontAwesomeIcon>\r\n          <span style={{ marginLeft: \"1rem\", marginRight: \"1rem\" }}>This Week</span>\r\n          <FontAwesomeIcon icon={faHistory} className=\"icon\" onClick={() => setStatiModalState(true)}></FontAwesomeIcon>\r\n        </span>\r\n        {/* <span>\r\n          {new Date(statiToShow[0].timestamp).toDateString().slice(4, 10) + \" to \" + new Date(statiToShow[statiToShow.length - 1].timestamp).toDateString().slice(4, 10)}\r\n        </span>\r\n        {new Date().toDateString() !== dateRange.max ?\r\n          <span style={{ right: \"1rem\", position: \"absolute\" }} className=\"clickable\">\r\n            {isFetching !== 'next' ?\r\n              <FontAwesomeIcon icon={faArrowRight} className='clickable-icon' onClick={() => fetchStati(+1)}></FontAwesomeIcon> :\r\n              <Loading bright={preferences.theme === 'dark'} mini></Loading>}\r\n          </span>\r\n          : null */}\r\n      </div>\r\n      <div className=\"grid\" style={{ gridTemplateColumns: `repeat(${days.length + 1}, 1fr)` }}>\r\n        <span></span>\r\n        {stati.map((dayStatus, i) => {\r\n          const date = new Date(dayStatus.unixTimestamp);\r\n          return <span key={dayStatus.uid} className={\"date\" + ((isDateToday(statiToShow[i].timestamp || statiToShow[i].date)) ? \" today primary\" : \"\")}>\r\n            {date.getDate()}/{date.getMonth()}\r\n          </span>\r\n        })}\r\n        <span></span>\r\n        {days.map((day, i) => (<span key={day + \".\" + i} className={\"day\" + ((isDateToday(statiToShow[i].timestamp || statiToShow[i].date)) ? \" today primary\" : \"\")}>{day}</span>))}\r\n        {status.map(status2 => {\r\n          const name = names[status.indexOf(status2)];\r\n          return (\r\n            [<span className=\"prayerName\" key={name}><span>{name}</span></span>,\r\n            status2.map((char, i) => (\r\n              // <FontAwesomeIcon className={\"status o\"} icon={faCheck}></FontAwesomeIcon>\r\n              <span\r\n                key={name + \".\" + i}\r\n                className={\"status \" + char}\r\n                onClick={() => { setPrayerState({ name, status: char, dayIndex: i, timestamp: statiToShow[i].unixTimestamp }); setStatusModalState(true); }}\r\n              // onClick={() => editStatus(name, char, i)}\r\n              >\r\n              </span>\r\n            ))]\r\n          )\r\n        })}\r\n      </div>\r\n      <div className=\"key\">\r\n        <span><div className=\"status o dormant\"></div>Timely</span>\r\n        <span><div className=\"status d dormant\"></div>Delayed</span>\r\n        <span><div className=\"status m dormant\"></div>Missed</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { StateStore } from '../store';\r\nimport './PrayersContainer.scss';\r\nimport PrayerModal from './PrayerModal';\r\nimport { editPrayerStatus, setTimings } from '../Actions/UserActions';\r\nimport { names } from '../Data';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { timeGreater, timeConvert } from '../Functions';\r\n\r\nexport default function PrayersContainer({ currTime }) {\r\n  const [modalState, setModalState] = useState(false);\r\n  const [prayerState, setPrayerState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const { state: { preferences, timings, stati, user }, dispatch } = useContext(StateStore);\r\n  const { location, calcMethod, timeFormat } = preferences || {};\r\n  useEffect(() => {\r\n    if (!preferences) {\r\n      setLoading(true);\r\n      console.log('llll')\r\n      return;\r\n    }\r\n    const fetchData = async () => {\r\n      if (calcMethod !== timings?.calcMethod || !timings || timings?.date !== new Date().toDateString() || timings?.location?.city !== location.city || timings?.location?.country !== location.country) {\r\n        setLoading(true);\r\n        const { city, country } = location;\r\n\r\n        let res;\r\n        try {\r\n          res = await fetch(`https://api.aladhan.com/v1/timingsByCity?city=${city}&country=${country}&method=${calcMethod}&school=1`);\r\n          if (!res.ok) throw new Error(res);\r\n        } catch (err) {\r\n          setLoading(false);\r\n          setError(\"Unable to update Prayer timings right now\");\r\n          return;\r\n        }\r\n\r\n        let json = await res.json();\r\n\r\n        const newTimings = json.data.timings;\r\n        newTimings.location = { ...location };\r\n        newTimings.date = new Date().toDateString();\r\n        newTimings.calcMethod = calcMethod;\r\n\r\n        setTimings(dispatch, newTimings);\r\n        setLoading(false);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [calcMethod, dispatch, location, timings, preferences]);\r\n\r\n  const save = (formData, char) => {\r\n    editPrayerStatus(user, stati[stati.length - 1].uid, formData.name, char);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {(loading || (!timings) || (!stati)) ?\r\n        <div className=\"prayers-container\">\r\n          {names.map((name, index) => (<Prayer\r\n            status={\"n\"}\r\n            loading={true}\r\n            key={name}\r\n          ></Prayer>))}\r\n        </div> :\r\n        <div className=\"prayers-container\">\r\n          {names.map((name, index) => (<Prayer\r\n            key={name}\r\n            name={name}\r\n            time={timeFormat === \"12\" ? timeConvert(timings[name]) : timings[name]}\r\n            timePassed={timeGreater(currTime, timings[name])}\r\n            status={stati[stati.length - 1][name]}\r\n            onClick={() => { setPrayerState({ name, status: stati[stati.length - 1][name] }); setModalState(true); }}\r\n          ></Prayer>))}\r\n        </div>\r\n      }\r\n      {\r\n        !error ? null :\r\n          (<div className=\"card error\">\r\n            <FontAwesomeIcon className=\"icon\" icon={faExclamationTriangle}></FontAwesomeIcon>\r\n            <span>{error}</span>\r\n            <div className=\"delete\" onClick={() => setError(null)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></div>\r\n          </div>)\r\n      }\r\n      {\r\n        !modalState ? null :\r\n          <PrayerModal theme={preferences.theme} save={save} prayerState={prayerState} modalIsOpen={modalState} toggle={setModalState}></PrayerModal>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Prayer(props) {\r\n  let messages = {\r\n    o: name => (`You prayed ${props.name} Prayer on time`),\r\n    m: name => (`You missed ${props.name} Prayer`),\r\n    n: name => (\r\n      props.timePassed ?\r\n        `${props.time} Onwards ${props.name} Prayer` :\r\n        `${props.time} Onwards ${props.name} Prayer`\r\n    ),\r\n    d: name => (`You prayed ${props.name} Prayer at a delayed time`),\r\n    ex: name => (`You were exempted from offering ${props.name} Prayer`)\r\n  }\r\n  return (\r\n    <button onClick={(props.status === 'n' && !props.timePassed) ? null : props.onClick} className={\"card prayer-card \" + props.status + ((props.status === 'n' && !props.timePassed) ? \" future\" : \"\")}>\r\n      {props.loading ? <span className=\"filler\"></span> : messages[props.status] ? messages[props.status](props) : \"Oops, Something went horribly wrong.\"}\r\n    </button>\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog, faMapMarkerAlt, faInfo } from '@fortawesome/free-solid-svg-icons';\r\nimport QuranCard from './QuranCard';\r\nimport GeneralCard from './GeneralCard';\r\nimport WeeklyCard from './WeeklyCard';\r\nimport PrayersContainer from './PrayersContainer';\r\nimport { StateStore } from '../store';\r\n\r\nexport default function Home({ currTime, setAboutModal, setSettingsModal }) {\r\n  const { state } = useContext(StateStore);\r\n  const { preferences } = state;\r\n  const location = preferences?.location || null;\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <WeeklyCard></WeeklyCard>\r\n        <PrayersContainer currTime={currTime}></PrayersContainer>\r\n      </div>\r\n      <div className=\"side\">\r\n        {/* <Clock format={'HH:mm'} ticking={true} className=\"card clock\" /> */}\r\n        <QuranCard></QuranCard>\r\n\r\n        <GeneralCard text={location ? (location?.city + \", \" + location?.country) : ''}>\r\n          <FontAwesomeIcon icon={faMapMarkerAlt}></FontAwesomeIcon>\r\n          {!location ? <div className=\"filler\" style={{display: \"inline-block\", width: \"60%\"}}></div> : null}\r\n        </GeneralCard>\r\n        <GeneralCard className=\"only-desktop\" text=\"Preferences\" onClick={() => setSettingsModal(true)}>\r\n          <FontAwesomeIcon icon={faCog}></FontAwesomeIcon>\r\n        </GeneralCard>\r\n        <GeneralCard text=\"About & What's New\" onClick={() => setAboutModal(true)}>\r\n          <FontAwesomeIcon icon={faInfo}></FontAwesomeIcon>\r\n        </GeneralCard>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\nimport './App.scss';\nimport SettingsModal from './Components/SettingsModal';\nimport AboutModal from './Components/AboutModal';\nimport { StateStore } from './store';\nimport Registration from './Components/Registeration';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport HeaderMobile from './Components/HeaderMobile';\nimport Home from './Components/Home';\nimport { timeGreater } from './Functions';\nimport { setAuthListener } from './Actions/AuthActions';\nimport Loading from './Components/Loading';\n\nfunction App() {\n\n  const { state, dispatch } = useContext(StateStore);\n  const { preferences, timings, user, isAuthenticated } = state;\n  const [settingsModalState, setSettingsModal] = React.useState(false);\n  const [aboutModalState, setAboutModal] = React.useState(false);\n\n  // if (!hasInitialised) return (\n  //   <Registration></Registration>\n  // );\n\n  useEffect(() => {\n    const toUnsubscribe = setAuthListener(dispatch, () => {\n      setSettingsModal(false);\n    });\n    return () => toUnsubscribe.forEach(unsubscribe => unsubscribe());\n  }, [dispatch]);\n\n  const currTime = (new Date().getHours()) + \":\" + (new Date().getMinutes());\n\n  return (\n    <div className={`App ${preferences?.theme === \"auto\" ? (timeGreater(currTime, timings?.Sunrise) && timeGreater(timings?.Sunset, currTime) ? \"light\" : \"dark\") : preferences?.theme}-theme`}>\n      <HeaderMobile>\n        {user ? <FontAwesomeIcon icon={faCog} className=\"icon\" onClick={() => setSettingsModal(true)}></FontAwesomeIcon> : null}\n        <div className=\"text\">Prayer Journal</div>\n      </HeaderMobile>\n      {\n        user ?\n        // user || isAuthenticated ?\n          <>\n            <Home currTime={currTime} setSettingsModal={setSettingsModal} setAboutModal={setAboutModal}></Home>\n            {settingsModalState ? <SettingsModal toggle={setSettingsModal} modalIsOpen={settingsModalState}></SettingsModal> : null}\n            {aboutModalState ? <AboutModal theme={preferences?.theme} toggle={setAboutModal} modalIsOpen={aboutModalState}></AboutModal> : null}\n          </> : isAuthenticated ? <div className=\"centerfull\"><Loading bright={preferences?.theme === 'dark'}></Loading></div> : <Registration></Registration>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import fire from \"../base\";\r\nimport store from 'store';\r\n\r\nexport function setAuthListener(dispatch, callback) {\r\n  const toUnsubscribe = [];\r\n  toUnsubscribe.push(fire.auth().onAuthStateChanged(user => {\r\n    if (user) {\r\n\r\n      toUnsubscribe.push(fire.firestore().collection('users').doc(user.uid).collection('stati').orderBy(\"unixTimestamp\", \"desc\").limit(7).onSnapshot(snapshot => {\r\n      // toUnsubscribe.push(fire.firestore().collection('users').doc(user.uid).collection('stati').where(\"unixTimestamp\", \">\", d.getTime()).onSnapshot(snapshot => {\r\n        dispatch({ type: \"STATI_UPDATED\", payload: { stati: snapshot.docs.map(doc => ({ ...doc.data(), uid: doc.id })).reverse() } });\r\n      }, console.log));\r\n\r\n      toUnsubscribe.push(fire.firestore().collection('users').doc(user.uid).onSnapshot(snapshot => {\r\n        const preferences = snapshot.get('preferences');\r\n        dispatch({ type: \"EDIT_PREFERENCES\", payload: { preferences } });\r\n        store.set(\"preferences\", preferences);\r\n      }, console.log));\r\n\r\n      dispatch({ type: \"AUTH_STATE_CHANGED\", payload: { user, isAuthenticated: true } });\r\n      store.set(\"isAuthenticated\", true);\r\n    } else {\r\n      dispatch({ type: \"AUTH_STATE_CHANGED\", payload: { user: null, isAuthenticated: false } });\r\n      store.set(\"isAuthenticated\", false);\r\n    }\r\n    callback(user);\r\n  }));\r\n  return toUnsubscribe;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/loading.7d02b50b.gif\";"],"sourceRoot":""}