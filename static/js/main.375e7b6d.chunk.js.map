{"version":3,"sources":["Components/loading.gif","Components/Loading.js","Components/QuranCard.js","Components/GeneralCard.js","store.js","Actions/UserActions.js","Data.js","Components/WeeklyCard.js","Components/PrayerModal.js","Components/PrayersContainer.js","Components/LocationSelect.js","Components/Registerationtwo.js","Components/SettingsModal.js","Components/AboutModal.js","Components/HeaderMobile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","props","msg","className","bright","width","src","LoadingGIF","alt","this","shouldUpdateVerse","verse","timestamp","Date","toDateString","date","toLocaleDateString","locale","QuranCard","React","useState","store","get","isLoading","setVerse","error","setError","fetchData","a","fetch","res","ok","Error","json","result","translate","newVerse","reference","sura_detail","tname","sura","aya","text","arabic","surahName","toISOString","set","useEffect","icon","faExclamationTriangle","style","animationDuration","dark","onClick","textAlign","cursor","marginRight","faSync","rel","target","href","faAngleDoubleRight","GeneralCard","children","initialState","hasInitialised","preferences","stati","timings","StateStore","createContext","Provider","StateProvider","useReducer","state","action","type","payload","dispatch","value","_MS_PER_DAY","StringifySingleStati","temp","Fajr","Zuhr","Asr","Maghrib","Isha","getTime","syncStatiDate","newStati","lastTimestamp","length","daysPassed","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","dataToAbandon","i","push","shift","abandonedStati","editPrayerStatus","newStatus","dayIndex","setTimings","Dhuhr","printAllData","window","confirm","json2csv","items","fullForms","o","n","m","d","ex","item","key","makeVerbose","map","isVerbose","parts","split","parseInt","ParseSingleStringifiedStati","err","csv","filename","element","document","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","alert","download","names","WeeklyCard","useContext","lastStatus","shouldUpdateStati","days","statuses","status","name","day","getDay","splice","faCalendarWeek","status2","indexOf","char","editStatus","PrayerModal","modalIsOpen","toggle","save","prayerState","formData","setFormData","dataChanged","setDataChanged","isOpen","shouldCloseOnOverlayClick","onRequestClose","overlayClassName","onChange","e","index","id","faTimes","faSave","PrayersContainer","currTime","modalState","setModalState","setPrayerState","loading","setLoading","location","calcMethod","timeFormat","city","country","newTimings","data","Prayer","time","timeConvert","timePassed","timeGreater","toString","match","slice","join","messages","Modal","setAppElement","LocationSelect","onFinal","_countryID","_stateID","_cityID","countries","csc","getAllCountries","getStatesOfCountry","states","setStates","getCitiesOfState","cities","setCities","formState","setFormState","formUpdated","options","selectedIndex","innerHTML","newState","option","marginTop","Registration","theme","undefined","msRightNow","register","SettingsModal","editPreferences","clearAll","reload","unregister","AboutModal","fontWeight","HeaderMobile","App","settingsModalState","setSettingsModal","aboutModalState","setAboutModal","getHours","getMinutes","Sunrise","Sunset","faCog","faMapMarkerAlt","faInfo","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.375e7b6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.7d02b50b.gif\";","import React from 'react';\r\nimport LoadingGIF from './loading.gif';\r\nimport './Loading.scss';\r\n\r\nexport default function Loading(props) {\r\n  if (!props.msg)\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <img className={'loading' + (props.bright ? \" bright\" : \" dark\")} width={props.width || '50px'} src={LoadingGIF} alt=\"\" />\r\n      </div>\r\n    )\r\n  else\r\n    return (\r\n      <div className='loading-container'>\r\n        <img className={'loading' + (props.bright ? \" bright\" : \" dark\")} width={props.width || '50px'} src={LoadingGIF} alt=\"\" />\r\n        <div className=''>{this.props.msg}</div>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport './QuranCard.scss'\r\nimport Loading from './Loading';\r\nimport store from 'store';\r\nimport { faAngleDoubleRight, faExclamationTriangle, faSync } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst shouldUpdateVerse = verse => {\r\n  if (verse.timestamp) return new Date().toDateString() !== new Date(verse.timestamp).toDateString()\r\n  else return verse.date !== new Date().toLocaleDateString(verse.locale)\r\n}\r\n\r\nexport default function QuranCard() {\r\n  const [verse, setVerse] = React.useState(store.get(\"verse\") || { isLoading: true });\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const fetchData = async (shouldForce = false) => {\r\n    if (shouldForce || shouldUpdateVerse(verse)) {\r\n      setVerse({ isLoading: true });\r\n\r\n      let res;\r\n      try {\r\n        res = await fetch(\"https://cors-anywhere.herokuapp.com/https://salamquran.com/en/api/v6/aya/day\");\r\n        if (!res.ok) throw new Error(res);\r\n      } catch (err) {\r\n        setVerse({ isLoading: false });\r\n        setError(\"The Quran API is unreachable right now\");\r\n        return;\r\n      }\r\n\r\n      let json = (await res.json()).result;\r\n      let translate = json.translate;\r\n\r\n      const newVerse = {\r\n        reference: json.sura_detail.tname + \" \" + translate.sura + \":\" + translate.aya,\r\n        sura: translate.sura, aya: translate.aya,\r\n        text: translate.text,\r\n        isLoading: false,\r\n        arabic: json.text,\r\n        surahName: json.sura_detail.tname,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n      setError(null);\r\n      store.set(\"verse\", newVerse);\r\n      setVerse(newVerse);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className=\"card quran-card\">\r\n      {\r\n        (error && !verse.isLoading) ?\r\n          <div className=\"error\">\r\n            <FontAwesomeIcon className=\"icon\" icon={faExclamationTriangle}></FontAwesomeIcon>\r\n            <span>{error}</span>\r\n          </div> : verse.isLoading ?\r\n            <>\r\n              <div className=\"reference\" style={{ width: 150 }}><div className=\"filler\" style={{ animationDuration: \"3s\" }}></div></div>\r\n              <Loading dark></Loading>\r\n            </>\r\n            :\r\n            <>\r\n              <div className=\"reference\">Quran, {verse.reference}</div>\r\n              <div className=\"verse arabic\">{verse.arabic}</div>\r\n              <div className=\"verse\">\"{verse.text}\"</div>\r\n            </>\r\n      }\r\n\r\n      <div className=\"more\">\r\n        {(error && !verse.isLoading) ?\r\n          <button className=\"more\" onClick={fetchData} style={{ width: \"120px\", textAlign: \"center\" }}>Retry</button> :\r\n          verse.isLoading ?\r\n            <button className=\"more\" style={{ width: \"120px\", textAlign: \"center\" }}><span className=\"filler\"></span></button> :\r\n            <>\r\n              <a style={{ cursor: \"pointer\", marginRight: \"0.5rem\" }} className=\"more clickable\" onClick={() => fetchData(true)}>\r\n                <span><FontAwesomeIcon icon={faSync}></FontAwesomeIcon></span>\r\n              </a>\r\n              <a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://quran.com/${verse.sura}/${verse.aya}`} className=\"more clickable\">\r\n                Continue Reading <span><FontAwesomeIcon icon={faAngleDoubleRight}></FontAwesomeIcon></span>\r\n              </a>\r\n            </>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './GeneralCard.scss'\r\n\r\nexport default function GeneralCard(props) {\r\n  return (\r\n    <div className={\"card general-card \" + (props.onClick ? \" clickable \" : \"\") + (props.className || \"\")} onClick={props.onClick}>\r\n      <span>{props.children}</span>\r\n      <span>{props.text}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React, { createContext, useReducer } from 'react';\r\nimport store from 'store';\r\n\r\nconst initialState = {\r\n  hasInitialised: store.get(\"hasInitialised\"),\r\n  preferences: store.get(\"preferences\"),\r\n  stati: store.get(\"stati\"),\r\n  timings: store.get(\"timings\"),\r\n};\r\nconst StateStore = createContext(initialState);\r\nconst { Provider } = StateStore;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"INITIALISE_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          hasInitialised: true,\r\n          preferences: action.payload.preferences,\r\n          stati: action.payload.stati\r\n        }\r\n      case \"INITIALISE_UNDO\":\r\n        return {\r\n          hasInitialised: false\r\n        }\r\n      case \"SYNC_STATI_DATE\":\r\n        return {\r\n          ...state,\r\n          stati: action.payload.stati\r\n        }\r\n      case \"EDIT_PRAYER_STATUS\":\r\n        return {\r\n          ...state,\r\n          stati: action.payload.stati\r\n        }\r\n      case \"EDIT_PREFERENCES\":\r\n        return {\r\n          ...state,\r\n          preferences: action.payload.preferences\r\n        }\r\n      case \"SET_TIMINGS\":\r\n        return {\r\n          ...state,\r\n          timings: action.payload.timings\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { StateStore, StateProvider }","// import { StateStore } from '../store';\r\nimport store from 'store';\r\nimport { json2csv } from 'json-2-csv';\r\n\r\nexport const register = (dispatch, formState) => {\r\n  // formState.location = { city: formState.city, country: formState.country }\r\n  store.set(\"preferences\", {\r\n    ...formState\r\n  });\r\n  store.set(\"hasInitialised\", true);\r\n\r\n  const stati = [];\r\n  const temp = { Fajr: 'n', Zuhr: 'n', Asr: 'n', Maghrib: 'n', Isha: 'n' };\r\n  const msRightNow = new Date().getTime();\r\n  for (let i = 6; i >= 0; i--) {\r\n    stati.push({ ...temp, timestamp: new Date(msRightNow - i * _MS_PER_DAY).toISOString() });\r\n  }\r\n\r\n  store.set(\"stati\", stati);\r\n  dispatch({ type: \"INITIALISE_SUCCESS\", \"source\": \"reg.js\", payload: { preferences: formState, stati } });\r\n}\r\n\r\nexport const unregister = (dispatch) => {\r\n  dispatch({ type: \"INITIALISE_UNDO\" });\r\n  store.clearAll();\r\n  window.location.reload();\r\n}\r\n\r\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n// a and b are javascript Date objects\r\nfunction dateDiffInDays(a, b) {\r\n  // Discard the time and time-zone information.\r\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n\r\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\nexport function StringifySingleStati(temp, timestamp) {\r\n  return `${temp.Fajr},${temp.Zuhr},${temp.Asr},${temp.Maghrib},${temp.Isha},${new Date(timestamp || temp.timestamp).getTime()}`\r\n}\r\n\r\nexport function ParseSingleStringifiedStati(temp, isVerbose) {\r\n  const parts = temp.split(',');\r\n  return {\r\n    Fajr: parts[0], //make verbose\r\n    Zuhr: parts[1],\r\n    Asr: parts[2],\r\n    Maghrib: parts[3],\r\n    Isha: parts[4],\r\n    timestamp: new Date(parseInt(parts[5])).toISOString(),\r\n  }\r\n}\r\n\r\nexport const syncStatiDate = (dispatch, stati) => {\r\n  const newStati = [...stati];\r\n  const timestamp = new Date();\r\n  const lastTimestamp = new Date(stati[stati.length - 1].timestamp || stati[stati.length - 1].date);\r\n  const daysPassed = dateDiffInDays(lastTimestamp, timestamp);\r\n\r\n  if (daysPassed <= 0) return;\r\n  let dataToAbandon = [];\r\n  for (let i = 1; i <= daysPassed; i++) {\r\n    dataToAbandon.push(StringifySingleStati(newStati.shift(), (lastTimestamp.getTime() + ((i - 7) * _MS_PER_DAY))))\r\n    newStati.push({\r\n      Fajr: 'n',\r\n      Zuhr: 'n',\r\n      Asr: 'n',\r\n      Maghrib: 'n',\r\n      Isha: 'n',\r\n      timestamp: new Date(lastTimestamp.getTime() + (i * _MS_PER_DAY)).toISOString()\r\n    });\r\n  }\r\n\r\n  const abandonedStati = store.get('abandonedStati') || [];\r\n  store.set('abandonedStati', [...abandonedStati, ...dataToAbandon]);\r\n  dispatch({ type: \"SYNC_STATI_DATE\", payload: { stati: newStati } });\r\n  store.set('stati', newStati);\r\n}\r\n\r\nexport const editPrayerStatus = (dispatch, stati, newStatus, dayIndex = stati.length - 1) => {\r\n  const newStati = [...stati];\r\n  newStati[dayIndex] = { ...newStati[dayIndex], ...newStatus }\r\n  dispatch({ type: \"EDIT_PRAYER_STATUS\", payload: { stati: newStati } });\r\n  store.set('stati', newStati);\r\n}\r\n\r\nexport const editPreferences = (dispatch, preferences) => {\r\n  dispatch({ type: \"EDIT_PREFERENCES\", payload: { preferences: { ...preferences } } });\r\n  store.set(\"preferences\", preferences);\r\n}\r\n\r\nexport const setTimings = (dispatch, timings) => {\r\n  timings.Zuhr = timings.Dhuhr;\r\n  dispatch({ type: \"SET_TIMINGS\", payload: { timings } });\r\n  store.set(\"timings\", timings);\r\n}\r\n\r\nfunction makeVerbose(items) {\r\n  const fullForms = {\r\n    o: \"Timely\",\r\n    n: \"-\",\r\n    m: \"Missed\",\r\n    d: \"Delayed\",\r\n    ex: \"Exempted\"\r\n  };\r\n  for (let item of items) {\r\n    for (let key in item) {\r\n      item[key] = fullForms[item[key]] || item[key];\r\n    }\r\n  }\r\n  return items;\r\n}\r\n\r\nfunction download(filename, text) {\r\n  var element = document.createElement('a');\r\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n  element.setAttribute('download', filename);\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n  element.click();\r\n  document.body.removeChild(element);\r\n  alert(\"Downloaded all of your data as a .csv file\")\r\n}\r\n\r\nexport const printAllData = () => {\r\n  if (window.confirm(\"This is an experimental feature. If you notice errors in the file generated, please report them\"))\r\n    json2csv(makeVerbose([...(store.get(\"abandonedStati\") || []).map(item => ParseSingleStringifiedStati(item)), ...store.get('stati')]), (err, csv) => download(`prayer-log-${new Date().toISOString()}.csv`, csv));\r\n}","export const names = ['Fajr', 'Zuhr', 'Asr', 'Maghrib', 'Isha'];","import React, { useContext } from 'react';\r\nimport { StateStore } from '../store';\r\nimport './WeeklyCard.scss';\r\nimport { syncStatiDate, editPrayerStatus, StringifySingleStati, ParseSingleStringifiedStati } from '../Actions/UserActions';\r\nimport { names } from '../Data';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarWeek } from '@fortawesome/free-solid-svg-icons';\r\nimport { json2csv } from 'json-2-csv';\r\nimport store from 'store';\r\n\r\nfunction shouldUpdateStati(stati) {\r\n  const lastStatus = stati[stati.length - 1];\r\n  if (lastStatus.timestamp) return new Date().toDateString() !== new Date(lastStatus.timestamp).toDateString()\r\n  else return new Date().toLocaleDateString(lastStatus.locale) !== lastStatus.date\r\n}\r\n\r\nfunction isDateToday(date) {\r\n  return new Date().toDateString() === new Date(date).toDateString();\r\n}\r\n\r\nexport default function WeeklyCard(props) {\r\n  const { dispatch, state: { stati } } = useContext(StateStore);\r\n\r\n  //if latest date in data is not today, add today's entry and remove first oldest entry\r\n  if (shouldUpdateStati(stati)) {\r\n    syncStatiDate(dispatch, stati);\r\n  }\r\n\r\n  let days = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\r\n  let statuses = ['o', 'd', 'm', 'n'];\r\n\r\n  const status = names.map(name => stati.map(status => status[name])); //usable format\r\n  const day = new Date(stati[stati.length - 1].timestamp || stati[stati.length - 1].date).getDay();\r\n  const temp = days.splice(day + 1);\r\n  days = [...temp, ...days]; //order day headings for last seven days\r\n\r\n  const editStatus = (name, status, dayIndex) => {\r\n    status = statuses[(statuses.indexOf(status) + 1) % statuses.length];\r\n    editPrayerStatus(dispatch, stati, { [name]: status }, dayIndex);\r\n  }\r\n  /*\r\n    missed m\r\n    ontime o\r\n    delayed d\r\n    nodata n\r\n    exempted e\r\n  */\r\n\r\n  return (\r\n    <div className=\"card weekly-card dark\">\r\n      <div className=\"heading\">\r\n        <span>\r\n          <FontAwesomeIcon icon={faCalendarWeek}></FontAwesomeIcon>\r\n        </span> <span>This Week</span>\r\n      </div>\r\n      <div className=\"grid\">\r\n        <span></span>\r\n        {days.map((day, i) => (<span key={day + \".\" + i} className={\"day\" + ((isDateToday(stati[i].timestamp || stati[i].date)) ? \" today primary\" : \"\")}>{day}</span>))}\r\n        {status.map(status2 => {\r\n          const name = names[status.indexOf(status2)];\r\n          return (\r\n            [<span className=\"prayerName\" key={name}><span>{name}</span></span>,\r\n            status2.map((char, i) => (\r\n              // <FontAwesomeIcon className={\"status o\"} icon={faCheck}></FontAwesomeIcon>\r\n              <span\r\n                key={name + \".\" + i}\r\n                className={\"status \" + char}\r\n                onClick={() => editStatus(name, char, i)}>\r\n              </span>\r\n            ))]\r\n          )\r\n        })}\r\n      </div>\r\n      <div className=\"key\">\r\n        <span><div className=\"status o dormant\"></div>Timely</span>\r\n        <span><div className=\"status d dormant\"></div>Delayed</span>\r\n        <span><div className=\"status m dormant\"></div>Missed</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './PrayerModal.scss';\r\nimport { names } from '../Data';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faSave } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function PrayerModal({ modalIsOpen, toggle, save, prayerState }) {\r\n  const [formData, setFormData] = useState({ ...prayerState });\r\n  const [dataChanged, setDataChanged] = useState(false);\r\n\r\n  const setPrayerName = (e) => {\r\n    setFormData({ ...formData, name: names[e.target.value] });\r\n    setDataChanged(true);\r\n  }\r\n  const setPrayerStatus = (e) => {\r\n    setFormData({ ...formData, status: e.target.value });\r\n    setDataChanged(true);\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        onRequestClose={() => toggle(false)}\r\n        className=\"modal prayer-modal\"\r\n        overlayClassName=\"modal-overlay prayer-modal-overlay\"\r\n      >\r\n        <div className=\"heading\">Record the status of\r\n          <select value={names.indexOf(formData.name)} className=\"slct\" onChange={setPrayerName}>\r\n            {names.map((name, index) => (<option\r\n              name={name}\r\n              value={index}\r\n              key={name}\r\n            >{name}</option>))}\r\n          </select>\r\n         Prayer</div>\r\n        <select name=\"\" id=\"\" value={formData.status} className=\"slct\" onChange={setPrayerStatus}>\r\n          <option value=\"n\">Not sure</option>\r\n          <option value=\"o\">Timely</option>\r\n          <option value=\"d\">Delayed</option>\r\n          <option value=\"m\">Missed</option>\r\n          <option value=\"ex\">Exempted</option>\r\n        </select>\r\n        <div>\r\n          <button className=\"btn primary clickable\" onClick={() => toggle(false)}>\r\n            <FontAwesomeIcon className=\"icon\" icon={faTimes}></FontAwesomeIcon> <span>Nevermind</span>\r\n          </button>\r\n          <button className={\"btn\" + (dataChanged ? \" primary clickable\" : \"\")} onClick={dataChanged ? (() => { save(formData); toggle(false); }) : null}>\r\n            <FontAwesomeIcon className=\"icon\" icon={faSave}></FontAwesomeIcon> <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nModal.setAppElement('body');","import React, { useContext, useState, useEffect } from 'react';\r\nimport { StateStore } from '../store';\r\nimport './PrayersContainer.scss';\r\nimport PrayerModal from './PrayerModal';\r\nimport { editPrayerStatus, setTimings } from '../Actions/UserActions';\r\nimport { names } from '../Data';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function PrayersContainer({ currTime }) {\r\n  const [modalState, setModalState] = useState(false);\r\n  const [prayerState, setPrayerState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const { state: { preferences: { location, calcMethod, timeFormat }, timings, stati }, dispatch } = useContext(StateStore);\r\n\r\n  useEffect(() => {\r\n    // setTimeout(setLoading, 1000, false);\r\n    const fetchData = async () => {\r\n      if (calcMethod !== timings?.calcMethod || !timings || timings?.date !== new Date().toDateString() || timings?.location?.city !== location.city || timings?.location?.country !== location.country) {\r\n        setLoading(true);\r\n        const { city, country } = location;\r\n\r\n        let res;\r\n        try {\r\n          res = await fetch(`https://api.aladhan.com/v1/timingsByCity?city=${city}&country=${country}&method=${calcMethod}&school=1`);\r\n          if (!res.ok) throw new Error(res);\r\n        } catch (err) {\r\n          setLoading(false);\r\n          setError(\"Unable to update Prayer timings right now\");\r\n          return;\r\n        }\r\n\r\n        let json = await res.json();\r\n\r\n        const newTimings = json.data.timings;\r\n        newTimings.location = { ...location };\r\n        newTimings.date = new Date().toDateString();\r\n        newTimings.calcMethod = calcMethod;\r\n\r\n        setTimings(dispatch, newTimings);\r\n        setLoading(false);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [calcMethod, dispatch, location, timings]);\r\n\r\n  const save = (formData) => {\r\n    editPrayerStatus(dispatch, stati, { [formData.name]: formData.status });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ?\r\n        <div className=\"prayers-container\">\r\n          {names.map((name, index) => (<Prayer\r\n            status={\"n\"}\r\n            loading={true}\r\n            key={name}\r\n          ></Prayer>))}\r\n        </div> :\r\n        <div className=\"prayers-container\">\r\n          {names.map((name, index) => (<Prayer\r\n            key={name}\r\n            name={name}\r\n            time={timeFormat === \"12\" ? timeConvert(timings[name]) : timings[name]}\r\n            timePassed={timeGreater(currTime, timings[name])}\r\n            status={stati[stati.length - 1][name]}\r\n            onClick={() => { setPrayerState({ name, status: stati[stati.length - 1][name] }); setModalState(true); }}\r\n          ></Prayer>))}\r\n        </div>\r\n      }\r\n      {\r\n        !error ? null :\r\n          (<div className=\"card error\">\r\n            <FontAwesomeIcon className=\"icon\" icon={faExclamationTriangle}></FontAwesomeIcon>\r\n            <span>{error}</span>\r\n            <div className=\"delete\" onClick={() => setError(null)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></div>\r\n          </div>)\r\n      }\r\n      {\r\n        !modalState ? null :\r\n          <PrayerModal save={save} prayerState={prayerState} modalIsOpen={modalState} toggle={setModalState}></PrayerModal>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport function timeGreater(a = \"00:00\", b = \"00:01\") {\r\n  if (parseInt(a.split(':')[0]) > parseInt(b.split(':')[0])) return true;\r\n  else if (parseInt(a.split(':')[0]) === parseInt(b.split(':')[0]) && parseInt(a.split(':')[1]) > parseInt(b.split(':')[1])) return true;\r\n  else return false\r\n}\r\n\r\nfunction timeConvert(time) {\r\n  // Check correct time format and split into components\r\n  time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n  if (time.length > 1) { // If time format correct\r\n    time = time.slice(1);  // Remove full string match value\r\n    time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n    time[0] = +time[0] % 12 || 12; // Adjust hours\r\n  }\r\n  return time.join(''); // return adjusted time or original string\r\n}\r\n\r\nfunction Prayer(props) {\r\n  let messages = {\r\n    o: name => (`You prayed ${props.name} Prayer on time`),\r\n    m: name => (`You missed ${props.name} Prayer`),\r\n    n: name => (\r\n      props.timePassed ?\r\n        `${props.time} Onwards ${props.name} Prayer` :\r\n        `${props.time} Onwards ${props.name} Prayer`\r\n    ),\r\n    d: name => (`You prayed ${props.name} Prayer at a delayed time`),\r\n    ex: name => (`You were exempted from offering ${props.name} Prayer`)\r\n  }\r\n  return (\r\n    <button onClick={!props.timePassed ? null : props.onClick} className={\"card prayer-card \" + props.status + (!props.timePassed ? \" future\" : \"\")}>\r\n      {props.loading ? <span className=\"filler\"></span> : messages[props.status](props)}\r\n    </button>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport csc from 'country-state-city';\r\n\r\nexport default function LocationSelect({ onFinal, _countryID, _stateID, _cityID }) {\r\n\r\n  const countries = csc.getAllCountries();\r\n  const [states, setStates] = useState(_countryID ? csc.getStatesOfCountry(_countryID) : null);\r\n  const [cities, setCities] = useState(_stateID ? csc.getCitiesOfState(_stateID) : null);\r\n  const [formState, setFormState] = useState({ _countryID, _stateID, _cityID });\r\n\r\n  const formUpdated = ({ target }) => {\r\n    if (target.name == \"country\") {\r\n      setFormState({\r\n        ...formState,\r\n        country: target.options[target.selectedIndex].innerHTML,\r\n        _countryID: target.value\r\n      });\r\n      setStates(csc.getStatesOfCountry(target.value));\r\n      setCities(null);\r\n    } else if (target.name == \"state\") {\r\n      setFormState({\r\n        ...formState,\r\n        state: target.options[target.selectedIndex].innerHTML,\r\n        _stateID: target.value\r\n      });\r\n      setCities(csc.getCitiesOfState(target.value));\r\n    } else if (target.name == \"city\") {\r\n      const newState = {\r\n        ...formState,\r\n        city: target.options[target.selectedIndex].innerHTML,\r\n        _cityID: target.value\r\n      };\r\n      setFormState(newState);\r\n      onFinal({ target: { name: \"location\", value: newState } });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <select value={formState._countryID} name=\"country\" id=\"country\" className=\"slct\" onChange={formUpdated}>\r\n        <option>Select Country</option>\r\n        {countries.map((option, i) => <option value={option.id}>{option.name}</option>)}\r\n      </select>\r\n\r\n      {states ?\r\n        (<select value={formState._stateID} name=\"state\" id=\"state\" className=\"slct\" style={{ marginTop: \"0.25rem\" }} onChange={formUpdated}>\r\n          <option>Select State</option>\r\n          {states.map((option, i) => <option value={option.id}>{option.name}</option>)}\r\n        </select>)\r\n        : null}\r\n\r\n      {cities ?\r\n        (<select value={formState._cityID} name=\"city\" id=\"city\" className=\"slct\" style={{ marginTop: \"0.25rem\" }} onChange={formUpdated}>\r\n          <option>Select City</option>\r\n          {cities.map((option, i) => <option value={option.id}>{option.name}</option>)}\r\n        </select>)\r\n        : null}\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { StateStore } from '../store';\r\nimport './Registration.scss';\r\nimport { register, unregister } from '../Actions/UserActions';\r\nimport Loading from './Loading';\r\nimport LocationSelect from './LocationSelect';\r\n\r\nexport const options = [\r\n  \"Shia Ithna-Ansari\",\r\n  \"University of Islamic Sciences, Karachi\",\r\n  \"Islamic Society of North America\",\r\n  \"Muslim World League\",\r\n  \"Umm Al-Qura University, Makkah\",\r\n  \"Egyptian General Authority of Survey\",\r\n  \"Institute of Geophysics, University of Tehran\",\r\n  \"Gulf Region\",\r\n  \"Kuwait\",\r\n  \"Qatar\",\r\n  \"Majlis Ugama Islam Singapura, Singapore\",\r\n  \"Union Organization islamic de France\",\r\n  \"Diyanet İşleri Başkanlığı, Turkey\",\r\n  \"Spiritual Administration of Muslims of Russia\"]\r\n\r\nexport default function Registration() {\r\n\r\n  const { dispatch } = useContext(StateStore);\r\n\r\n  const [formState, setFormState] = useState({ calcMethod: 1, theme: 'dark', location: undefined });\r\n\r\n  const formUpdated = ({ target }) => {\r\n    setFormState({ ...formState, [target.name]: target.value });\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <div className=\"card register-card\">\r\n        <div className=\"heading\">\r\n          Prayer Journal<br></br>\r\n        </div>\r\n        <p>Before we begin, select a Prayer times calculation method and your location</p>\r\n\r\n        <select onChange={formUpdated} value={formState.calcMethod} name=\"calcMethod\">\r\n          {options.map((option, i) => <option value={i}>{option}</option>)}\r\n        </select>\r\n\r\n        <LocationSelect onFinal={formUpdated}></LocationSelect>\r\n\r\n        {(formState.location) ? <button className=\"btn primary clickable\" onClick={() => register(dispatch, formState)}>Save</button> : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './SettingsModal.scss';\r\nimport { options } from './Registerationtwo';\r\nimport { StateStore } from '../store';\r\nimport { editPreferences, unregister, printAllData } from '../Actions/UserActions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport LocationSelect from './LocationSelect';\r\n\r\nexport default function SettingsModal({ modalIsOpen, toggle }) {\r\n  const { dispatch, state: { preferences } } = useContext(StateStore);\r\n  const [formState, setFormState] = useState(preferences);\r\n  const [dataChanged, setDataChanged] = useState(false);\r\n  const location = preferences.location;\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  const formUpdated = e => {\r\n    setDataChanged(true);\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        onRequestClose={() => toggle(false)}\r\n        className=\"modal settings-modal\"\r\n        overlayClassName=\"modal-overlay settings-modal-overlay\"\r\n      ><div>\r\n          {/* <div className=\"heading\">Preferences</div> */}\r\n          <div className=\"preference\">\r\n            <label>Timing</label>\r\n            <select className=\"slct input\" name=\"calcMethod\" onChange={formUpdated} value={formState.calcMethod}>\r\n              {options.map((option, i) => <option value={i} key={i}>{option}</option>)}\r\n            </select>\r\n          </div>\r\n          <div className=\"preference\">\r\n            <label>Theme</label>\r\n            <select className=\"slct input\" name=\"theme\" onChange={formUpdated} value={formState.theme}>\r\n              <option value=\"dark\">Dark</option>\r\n              <option value=\"light\">Light</option>\r\n              <option value=\"auto\">Auto</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"preference\">\r\n            <label>Format</label>\r\n            <select className=\"slct input\" name=\"timeFormat\" onChange={formUpdated} value={formState.timeFormat}>\r\n              <option value=\"24\">24 Hour Clock</option>\r\n              <option value=\"12\">12 Hour Clock</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"preference\">\r\n            <label>Location</label>\r\n            <div>\r\n              <LocationSelect\r\n                onFinal={formUpdated}\r\n                _countryID={location._countryID}\r\n                _stateID={location._stateID}\r\n                _cityID={location._cityID}\r\n              >\r\n              </LocationSelect>\r\n            </div>\r\n          </div>\r\n          <div className=\"spacer\"></div>\r\n          <div className=\"submitContainer\">\r\n            <button className=\"btn primary clickable\" onClick={() => toggle(false)}>\r\n              <FontAwesomeIcon className=\"icon\" icon={faTimes}></FontAwesomeIcon> <span>Nevermind</span>\r\n            </button>\r\n            <button className={\"btn\" + (dataChanged ? \" primary clickable\" : \"\")} onClick={dataChanged ? (() => { editPreferences(dispatch, formState); toggle(false) }) : null}>\r\n              <FontAwesomeIcon className=\"icon\" icon={faSave}></FontAwesomeIcon> <span>Save</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"preference\">\r\n            <label>Data</label>\r\n            <div>\r\n              <button className=\"btn clickable primary\" onClick={() => {\r\n                if (window.confirm(\"Are you sure you want to delete all data? This data will not be recoverable\")) unregister(dispatch);\r\n              }}>Clear All Data</button>\r\n              <button className=\"btn clickable primary\" onClick={printAllData}>Export All Data</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nModal.setAppElement('body');","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport './AboutModal.scss';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function AboutModal({ modalIsOpen, toggle }) {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        onRequestClose={() => toggle(false)}\r\n        className=\"modal about-modal\"\r\n        overlayClassName=\"modal-overlay settings-modal-overlay\"\r\n      ><div>\r\n        <div className=\"whatsnew\">\r\n          <div className=\"title\">What's New?</div>\r\n          <ul>\r\n            <span style={{fontWeight: \"bold\"}}>19 April, 2020...</span>\r\n            <li>Tweaked Animations</li>\r\n            <li>You can now download all of your data as a .csv file</li>\r\n            <div className=\"spacer\"></div>\r\n            <span style={{fontWeight: \"bold\"}}>Previously...</span>\r\n            <li>This about section has been added for nerds like you</li>\r\n            <li>You can now change your location in the preferences section</li>\r\n            <li>The Quran card allows force refresh, this is for cases where it had failed to fetch the verse of the day. It fetches a new one if available.</li>\r\n          </ul>\r\n        </div>\r\n          Prayer Journal allows you to record the statuses of your prayers as you offer them. A Quranic verse is displayed in the Quran Card, fetched from a third party API, which is refreshed once a day. Prayer timings are fetched according to your location from another external API. This application is stricly for pupils following Islam as their religion, and supports the five compulsory daily prayers. It displays data for upto seven days, after which the data is stored in permanent storage. It will make use of that data in the future.\r\n        <br></br>\r\n          This application has been built by, and is maintained by the entity represented by <a href=\"https://umerkay.github.io\" target=\"_blank\" rel=\"noopener noreferrer\" >umerkay</a>.\r\n          This is primarily a personal project that is made available for public use on Github Pages.\r\n          <br></br>\r\n          This is a Progressive Web App (PWA) and can work offline; this same link works both for desktop browsers and on phone browsers. Browsers supporting PWA installations, for example Chrome, allow this to be locally installed on desktops and phones alike.\r\n          Your data, as of now, is stored locally and I am yet to add mechanism for syncing data between devices, for example between your desktop and your phone.\r\n          <br></br>\r\n          If you have suggestions and/or requests for this app, you can open issues on the Github repository. If you do not know how to do that, send those to me personally (contact information is available on my portfolio).\r\n        </div>\r\n        <button className=\"btn primary clickable\" onClick={() => toggle(false)}>\r\n          <span>Okay</span>\r\n        </button>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nModal.setAppElement('body');","import React from 'react';\r\nimport './HeaderMobile.scss';\r\n\r\nexport default function HeaderMobile(props) {\r\n  return (\r\n    <div id=\"header-mobile\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\nimport './App.scss';\nimport QuranCard from './Components/QuranCard';\nimport GeneralCard from './Components/GeneralCard';\nimport WeeklyCard from './Components/WeeklyCard';\nimport PrayersContainer, { timeGreater } from './Components/PrayersContainer';\nimport SettingsModal from './Components/SettingsModal';\nimport AboutModal from './Components/AboutModal';\n// import Clock from 'react-live-clock';\n// import store from 'store';\nimport { StateStore } from './store';\nimport Registration from './Components/Registerationtwo';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog , faMapMarkerAlt, faInfo } from '@fortawesome/free-solid-svg-icons'\nimport HeaderMobile from './Components/HeaderMobile';\n\nfunction App() {\n\n  const { state } = useContext(StateStore);\n  const { hasInitialised, preferences, timings } = state;\n\n  const [settingsModalState, setSettingsModal] = React.useState(false);\n  const [aboutModalState, setAboutModal] = React.useState(false);\n\n  if (!hasInitialised) return (\n    <Registration></Registration>\n  );\n\n  let theme;\n  const currTime = (new Date().getHours()) + \":\" + (new Date().getMinutes());\n  if (preferences.theme === \"auto\") {\n    theme = timeGreater(currTime, timings?.Sunrise) && timeGreater(timings?.Sunset, currTime) ? \"light\" : \"dark\";\n  } else {\n    theme = preferences.theme;\n  }\n\n  return (\n    <div className={`App ${theme || \"dark\"}-theme`}>\n      <HeaderMobile>\n        <FontAwesomeIcon icon={faCog} className=\"icon\" onClick={() => setSettingsModal(true)}></FontAwesomeIcon>\n        <div className=\"text\">Prayer Journal</div>\n      </HeaderMobile>\n      {settingsModalState ? <SettingsModal toggle={setSettingsModal} modalIsOpen={settingsModalState}></SettingsModal> : null}\n      {aboutModalState ? <AboutModal toggle={setAboutModal} modalIsOpen={aboutModalState}></AboutModal> : null}\n      <div className=\"main\">\n        <WeeklyCard></WeeklyCard>\n        <PrayersContainer calcMethod={preferences.calcMethod} currTime={currTime} location={preferences.location}></PrayersContainer>\n      </div>\n      <div className=\"side\">\n        {/* <Clock format={'HH:mm'} ticking={true} className=\"card clock\" /> */}\n        <QuranCard></QuranCard>\n        <GeneralCard text={preferences.location.city + \", \" + preferences.location.country}>\n          <FontAwesomeIcon icon={faMapMarkerAlt}></FontAwesomeIcon>\n        </GeneralCard>\n        <GeneralCard className=\"only-desktop\" text=\"Preferences\" onClick={() => setSettingsModal(true)}>\n          <FontAwesomeIcon icon={faCog}></FontAwesomeIcon>\n        </GeneralCard>\n        <GeneralCard text=\"About & What's New\" onClick={() => setAboutModal(true)}>\n          <FontAwesomeIcon icon={faInfo}></FontAwesomeIcon>\n        </GeneralCard>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}